const colorButton = document.getElementById('colorChange'); // Gets the button element

const mainImg = document.getElementById('darkHover'); // Gets the image element

const images = ['../../img/img11.jpg', '../../img/img12.jpg', '../../img/img10.JPG', '../../img/img6.JPEG']; //array of image paths
const alts = ['Skiing', 'Disney with Friends', 'Alpha Phi Preference', 'Seeing Play with Friends']; //array of alt descriptions for the images in the images array

// Counts which index in the images and alts array
let imgCounter = 1; //It is already displaying the 0 index photo so we want it to start at index 1

colorButton.addEventListener('click', changeColor);// listens for the click of the button
colorButton.addEventListener('click', changePhoto); // listens for the click of the button

mainImg.addEventListener('mouseover', darkenImg); // listens for when the mouse is over the image
mainImg.addEventListener('mouseout', lightenImg); // listens for when the mouse moves off the image
mainImg.addEventListener('click', changePhoto); // listens for when the image is clicked


// This function changes which image is displayed
// Inputs: none
// Output: none
function changePhoto(){
    if (imgCounter < 4){ //If the images index is valid
        mainImg.src = images[imgCounter];
        mainImg.alt = alts[imgCounter];
        imgCounter ++;
    }else{ //Resets the images index to the beginning
        imgCounter = 0;
        mainImg.src = images[imgCounter];
        mainImg.alt = alts[imgCounter];
        imgCounter ++;
    }
    
}


// This function adds a grayscale filter from the specific image 'mainImg'
// Inputs: none
// Output: none
function darkenImg(){
    mainImg.style.filter = 'grayscale(60%)';
}


// This function removes a grayscale filter from the specific image 'mainImg'
// Inputs: none
// Output: none
function lightenImg(){
    mainImg.style.filter = 'grayscale(0%)';
}

// This function changes the background color of the specific button 'colorButton'
// Inputs: none
// Output: none
function changeColor(){
    const red = getRandomInt(0,255); 
    const green = getRandomInt(0,255);
    const blue = getRandomInt(0,255);
    
    colorButton.style.backgroundColor = `rgb(${red}, ${green}, ${blue})`; // changes the rgb values in the style of the button using the random numbers generated by the random number function
}


// This function creates a random whole number between the variables 'min' and 'max'
// Inputs: (min -> minimum number output, max -> maximum number output)
// Output: Int -> int between min and max
// Credit: This function was taken from a program I wrote in ATLS 2200
function getRandomInt(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive
}

